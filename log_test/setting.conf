
# log4j.logger.ros.log_test=WARN,rosout_a
# log4j.appender.rosout_a=org.apache.log4j.RollingFileAppender
# log4j.appender.rosout_a.Threshold=WARN
# log4j.appender.rosout_a.Append=true
# log4j.appender.rosout_a.File=/home/cherish/output.txt
# log4j.appender.rosout_a.layout=org.apache.log4j.PatternLayout
# log4j.appender.rosout_a.layout.ConversionPattern = %-d{MM-dd HH:mm:ss} %m%n

# log4j.logger.ros.log_test=INFO,rosout_a    # log_test是package名
# log4j.appender.rosout_a=org.apache.log4j.RollingFileAppender # 输出到文件，超过大小后自动创建下一个
# log4j.appender.rosout_a.Threshold=INFO          # 最低级别是INFO
# log4j.appender.rosout_a.Append=true				# 追加模式
# log4j.appender.rosout_a.MaxFileSize=100KB		# 每个日志文件的大小
# log4j.appender.rosout_a.MaxBackupIndex=10		# 最多产生多少日志文件，默认2个
# log4j.appender.rosout_a.File=/home/hlhp/output.txt     # 输出文件，可结合环境变量${ROSOUT_LOG_PATH}
# log4j.appender.rosout_a.layout=org.apache.log4j.PatternLayout   # 常用PatternLayout
# log4j.appender.rosout_a.layout.ConversionPattern = %-d{yyyy-MM-dd HH:mm:ss SSS} %m%n  # 输出格式


log4j.logger.ros.log_test=INFO,rosout_a
log4j.appender.rosout_a=org.apache.log4j.RollingFileAppender
log4j.appender.rosout_a.Threshold=INFO
log4j.appender.rosout_a.Append=true
log4j.appender.rosout_a.MaxFileSize=100KB
log4j.appender.rosout_a.MaxBackupIndex=10
log4j.appender.rosout_a.File=/home/cherish/output.txt
log4j.appender.rosout_a.layout=org.apache.log4j.PatternLayout
log4j.appender.rosout_a.layout.ConversionPattern = %-d{yyyy-MM-dd HH:mm:ss SSS} %m%n